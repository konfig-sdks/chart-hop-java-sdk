/*
 * ChartHop API
 * REST API for ChartHop
 *
 * The version of the OpenAPI document: V1.0.0
 * Contact: support@charthop.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreateProduct;
import com.konfigthis.client.model.Product;
import com.konfigthis.client.model.ResultsProduct;
import com.konfigthis.client.model.UpdateProduct;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductApi
 */
@Disabled
public class ProductApiTest {

    private static ProductApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ProductApi(apiClient);
    }

    /**
     * Create a new product
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewProductTest() throws ApiException {
        String name = null;
        String salesforceProductId = null;
        String stripeProductId = null;
        Set<String> features = null;
        String sku = null;
        Map<String, List<FeatureAccessOption>> featureOptions = null;
        Product response = api.createNewProduct(name, salesforceProductId, stripeProductId, features)
                .sku(sku)
                .featureOptions(featureOptions)
                .execute();
        // TODO: test validations
    }

    /**
     * Return a particular product by id
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String productId = null;
        Product response = api.getById(productId)
                .execute();
        // TODO: test validations
    }

    /**
     * Return all products
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllProductsTest() throws ApiException {
        ResultsProduct response = api.listAllProducts()
                .execute();
        // TODO: test validations
    }

    /**
     * Update an existing product
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateExistingProductTest() throws ApiException {
        String productId = null;
        String name = null;
        String sku = null;
        String salesforceProductId = null;
        String stripeProductId = null;
        Set<String> features = null;
        Map<String, List<FeatureAccessOption>> featureOptions = null;
        api.updateExistingProduct(productId)
                .name(name)
                .sku(sku)
                .salesforceProductId(salesforceProductId)
                .stripeProductId(stripeProductId)
                .features(features)
                .featureOptions(featureOptions)
                .execute();
        // TODO: test validations
    }

}
