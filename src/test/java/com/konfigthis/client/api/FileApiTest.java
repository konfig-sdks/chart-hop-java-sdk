/*
 * ChartHop API
 * REST API for ChartHop
 *
 * The version of the OpenAPI document: V1.0.0
 * Contact: support@charthop.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import java.io.File;
import com.konfigthis.client.model.FileEntity;
import com.konfigthis.client.model.FileUploadNewFileRequest;
import com.konfigthis.client.model.ResultsFileEntity;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FileApi
 */
@Disabled
public class FileApiTest {

    private static FileApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new FileApi(apiClient);
    }

    /**
     * Returns metadata about a file
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMetadataTest() throws ApiException {
        String orgId = null;
        String entityId = null;
        String entityType = null;
        Integer limit = null;
        String from = null;
        ResultsFileEntity response = api.getMetadata(orgId)
                .entityId(entityId)
                .entityType(entityType)
                .limit(limit)
                .from(from)
                .execute();
        // TODO: test validations
    }

    /**
     * Download a file
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMetadataByIdTest() throws ApiException {
        String orgId = null;
        String fileId = null;
        api.getMetadataById(orgId, fileId)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns metadata about a file
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMetadata_0Test() throws ApiException {
        String orgId = null;
        String fileId = null;
        FileEntity response = api.getMetadata_0(orgId, fileId)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a file
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeFileByIdTest() throws ApiException {
        String orgId = null;
        String fileId = null;
        api.removeFileById(orgId, fileId)
                .execute();
        // TODO: test validations
    }

    /**
     * Upload a new file
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadNewFileTest() throws ApiException {
        String orgId = null;
        File _file = null;
        String entityId = null;
        String entityType = null;
        String field = null;
        String sensitive = null;
        FileEntity response = api.uploadNewFile(orgId)
                ._file(_file)
                .entityId(entityId)
                .entityType(entityType)
                .field(field)
                .sensitive(sensitive)
                .execute();
        // TODO: test validations
    }

}
