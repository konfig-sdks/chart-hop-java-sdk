/*
 * ChartHop API
 * REST API for ChartHop
 *
 * The version of the OpenAPI document: V1.0.0
 * Contact: support@charthop.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CategorySort;
import com.konfigthis.client.model.CreateCategorySort;
import com.konfigthis.client.model.UpdateCategorySort;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CategorySortApi
 */
@Disabled
public class CategorySortApiTest {

    private static CategorySortApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CategorySortApi(apiClient);
    }

    /**
     * Create a category sort order if it doesn&#39;t exist
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createIfNotExistsTest() throws ApiException {
        String orgId = null;
        List<String> categoryIds = null;
        String orgId = null;
        CategorySort response = api.createIfNotExists(orgId, categoryIds, orgId)
                .execute();
        // TODO: test validations
    }

    /**
     * Create or update category sort order for a given org and return the sort data
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOrUpdateSortTest() throws ApiException {
        String orgId = null;
        List<String> categoryIds = null;
        CategorySort response = api.createOrUpdateSort(orgId)
                .categoryIds(categoryIds)
                .execute();
        // TODO: test validations
    }

    /**
     * Create or update category sort order for a given org and return the sort data
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOrUpdateSortOrderTest() throws ApiException {
        String orgId = null;
        List<String> categoryIds = null;
        CategorySort response = api.createOrUpdateSortOrder(orgId)
                .categoryIds(categoryIds)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a category sort order
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSortOrderTest() throws ApiException {
        String orgId = null;
        api.deleteSortOrder(orgId)
                .execute();
        // TODO: test validations
    }

    /**
     * Return category sort order
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCategorySortOrderTest() throws ApiException {
        String orgId = null;
        CategorySort response = api.getCategorySortOrder(orgId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an existing category sort order
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateExistingCategorySortTest() throws ApiException {
        String orgId = null;
        List<String> categoryIds = null;
        api.updateExistingCategorySort(orgId)
                .categoryIds(categoryIds)
                .execute();
        // TODO: test validations
    }

}
