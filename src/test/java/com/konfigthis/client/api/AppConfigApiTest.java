/*
 * ChartHop API
 * REST API for ChartHop
 *
 * The version of the OpenAPI document: V1.0.0
 * Contact: support@charthop.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AppConfig;
import com.konfigthis.client.model.CreateAppConfig;
import com.konfigthis.client.model.FieldMapper;
import com.konfigthis.client.model.OutboundFieldMapper;
import com.konfigthis.client.model.UpdateAppConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppConfigApi
 */
@Disabled
public class AppConfigApiTest {

    private static AppConfigApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new AppConfigApi(apiClient);
    }

    /**
     * Create a new app config
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewConfigTest() throws ApiException {
        String appId = null;
        String userId = null;
        String orgId = null;
        List<FieldMapper> fieldMappers = null;
        List<FieldMapper> customFieldMappers = null;
        List<OutboundFieldMapper> customOutboundFieldMappers = null;
        Set<String> disabledFieldMappers = null;
        Set<String> enabledOutboundFieldMappers = null;
        List<Map<String, String>> templateMatchers = null;
        Object options = null;
        AppConfig response = api.createNewConfig(appId)
                .userId(userId)
                .orgId(orgId)
                .fieldMappers(fieldMappers)
                .customFieldMappers(customFieldMappers)
                .customOutboundFieldMappers(customOutboundFieldMappers)
                .disabledFieldMappers(disabledFieldMappers)
                .enabledOutboundFieldMappers(enabledOutboundFieldMappers)
                .templateMatchers(templateMatchers)
                .options(options)
                .execute();
        // TODO: test validations
    }

    /**
     * Return default app configuration by app
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDefaultConfigByAppTest() throws ApiException {
        String appId = null;
        AppConfig response = api.getDefaultConfigByApp(appId)
                .execute();
        // TODO: test validations
    }

    /**
     * Return user app configuration by app and user
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserConfigByAppAndUserTest() throws ApiException {
        String appId = null;
        String userId = null;
        AppConfig response = api.getUserConfigByAppAndUser(appId, userId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an existing app
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByIdTest() throws ApiException {
        String appId = null;
        String userId = null;
        List<FieldMapper> fieldMappers = null;
        List<FieldMapper> customFieldMappers = null;
        List<OutboundFieldMapper> customOutboundFieldMappers = null;
        Set<String> disabledFieldMappers = null;
        Set<String> enabledOutboundFieldMappers = null;
        List<Map<String, String>> templateMatchers = null;
        Object options = null;
        api.updateById(appId, userId)
                .fieldMappers(fieldMappers)
                .customFieldMappers(customFieldMappers)
                .customOutboundFieldMappers(customOutboundFieldMappers)
                .disabledFieldMappers(disabledFieldMappers)
                .enabledOutboundFieldMappers(enabledOutboundFieldMappers)
                .templateMatchers(templateMatchers)
                .options(options)
                .execute();
        // TODO: test validations
    }

}
