/*
 * ChartHop API
 * REST API for ChartHop
 *
 * The version of the OpenAPI document: V1.0.0
 * Contact: support@charthop.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.WebAuthnRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebauthnApi
 */
@Disabled
public class WebauthnApiTest {

    private static WebauthnApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new WebauthnApi(apiClient);
    }

    /**
     * Check for an existing physical key for this user
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkExistingKeyTest() throws ApiException {
        api.checkExistingKey()
                .execute();
        // TODO: test validations
    }

    /**
     * Delete registered credentials by the given email
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeRegisteredCredentialsByEmailTest() throws ApiException {
        String emailBase64 = null;
        api.removeRegisteredCredentialsByEmail(emailBase64)
                .execute();
        // TODO: test validations
    }

    /**
     * Check for an existing physical key for this user
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyPhysicalKeyForUserTest() throws ApiException {
        api.verifyPhysicalKeyForUser()
                .execute();
        // TODO: test validations
    }

    /**
     * Check for an existing WebAuthn key for this user
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyPhysicalKeyForUser_0Test() throws ApiException {
        String requestId = null;
        String credentialResponse = null;
        api.verifyPhysicalKeyForUser_0(requestId, credentialResponse)
                .execute();
        // TODO: test validations
    }

    /**
     * Check for an existing physical key for this user
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyPhysicalKeyForUser_1Test() throws ApiException {
        String requestId = null;
        String credentialResponse = null;
        api.verifyPhysicalKeyForUser_1(requestId, credentialResponse)
                .execute();
        // TODO: test validations
    }

}
