/*
 * ChartHop API
 * REST API for ChartHop
 *
 * The version of the OpenAPI document: V1.0.0
 * Contact: support@charthop.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreateQueryToken;
import com.konfigthis.client.model.QueryToken;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for QueryApi
 */
@Disabled
public class QueryApiTest {

    private static QueryApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new QueryApi(apiClient);
    }

    /**
     * Expire a previously created live query immediately
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void expireLiveQueryTest() throws ApiException {
        String orgId = null;
        String queryToken = null;
        api.expireLiveQuery(orgId, queryToken)
                .execute();
        // TODO: test validations
    }

    /**
     * Return the results of a previously created live query
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void liveQueryResultTest() throws ApiException {
        String orgId = null;
        String queryToken = null;
        String format = null;
        String mapper = null;
        api.liveQueryResult(orgId, queryToken)
                .format(format)
                .mapper(mapper)
                .execute();
        // TODO: test validations
    }

    /**
     * Create a live query token
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void liveQueryTokenTest() throws ApiException {
        String type = null;
        Object params = null;
        String orgId = null;
        QueryToken response = api.liveQueryToken(type, params, orgId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a list of query tokens
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryTokensTest() throws ApiException {
        String orgId = null;
        List<QueryToken> response = api.queryTokens(orgId)
                .execute();
        // TODO: test validations
    }

}
