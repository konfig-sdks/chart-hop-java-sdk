/*
 * ChartHop API
 * REST API for ChartHop
 *
 * The version of the OpenAPI document: V1.0.0
 * Contact: support@charthop.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreateTaskConfig;
import com.konfigthis.client.model.DueDate;
import com.konfigthis.client.model.ResultsData;
import com.konfigthis.client.model.TaskConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TaskConfigApi
 */
@Disabled
public class TaskConfigApiTest {

    private static TaskConfigApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TaskConfigApi(apiClient);
    }

    /**
     * Create a new task config
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewConfigTest() throws ApiException {
        String entityId = null;
        String type = null;
        String pastDueAction = null;
        String orgId = null;
        String description = null;
        String assessmentId = null;
        String parentEntityId = null;
        DueDate dueDate = null;
        Boolean isSkippable = null;
        String label = null;
        String deleteId = null;
        String deleteAt = null;
        TaskConfig response = api.createNewConfig(entityId, type, pastDueAction, orgId)
                .description(description)
                .assessmentId(assessmentId)
                .parentEntityId(parentEntityId)
                .dueDate(dueDate)
                .isSkippable(isSkippable)
                .label(label)
                .deleteId(deleteId)
                .deleteAt(deleteAt)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all task configs for an org
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllConfigsTest() throws ApiException {
        String orgId = null;
        String from = null;
        String parentEntityId = null;
        String assessmentId = null;
        String entityId = null;
        Integer limit = null;
        ResultsData response = api.getAllConfigs(orgId)
                .from(from)
                .parentEntityId(parentEntityId)
                .assessmentId(assessmentId)
                .entityId(entityId)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a specific task config
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSpecificConfigTest() throws ApiException {
        String orgId = null;
        String id = null;
        TaskConfig response = api.getSpecificConfig(orgId, id)
                .execute();
        // TODO: test validations
    }

}
