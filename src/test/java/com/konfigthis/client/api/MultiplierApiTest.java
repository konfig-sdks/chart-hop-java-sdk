/*
 * ChartHop API
 * REST API for ChartHop
 *
 * The version of the OpenAPI document: V1.0.0
 * Contact: support@charthop.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreateMultiplier;
import java.time.LocalDate;
import com.konfigthis.client.model.ResultsData;
import com.konfigthis.client.model.UpdateMultiplier;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MultiplierApi
 */
@Disabled
public class MultiplierApiTest {

    private static MultiplierApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new MultiplierApi(apiClient);
    }

    /**
     * Create a multiplier
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewMultiplierTest() throws ApiException {
        String label = null;
        Double value = null;
        String expr = null;
        String orgId = null;
        String code = null;
        String category = null;
        LocalDate date = null;
        api.createNewMultiplier(label, value, expr, orgId)
                .code(code)
                .category(category)
                .date(date)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a multiplier
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMultiplierByIdTest() throws ApiException {
        String orgId = null;
        String multiplierId = null;
        LocalDate date = null;
        api.deleteMultiplierById(orgId, multiplierId)
                .date(date)
                .execute();
        // TODO: test validations
    }

    /**
     * Return a particular comp band multiplier by id on an effective date
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findCompBandMultipliersInOrgTest() throws ApiException {
        String orgId = null;
        String multiplierId = null;
        LocalDate date = null;
        ResultsData response = api.findCompBandMultipliersInOrg(orgId, multiplierId)
                .date(date)
                .execute();
        // TODO: test validations
    }

    /**
     * Find comp band multipliers in the organization
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findCompBandMultipliersInOrg_0Test() throws ApiException {
        String orgId = null;
        LocalDate date = null;
        String from = null;
        Integer limit = null;
        Boolean includeDeleted = null;
        ResultsData response = api.findCompBandMultipliersInOrg_0(orgId)
                .date(date)
                .from(from)
                .limit(limit)
                .includeDeleted(includeDeleted)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a multiplier
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMultiplerByIdTest() throws ApiException {
        String orgId = null;
        String multiplierId = null;
        String label = null;
        String code = null;
        Double value = null;
        String expr = null;
        String category = null;
        LocalDate date = null;
        api.updateMultiplerById(orgId, multiplierId)
                .label(label)
                .code(code)
                .value(value)
                .expr(expr)
                .category(category)
                .date(date)
                .execute();
        // TODO: test validations
    }

}
