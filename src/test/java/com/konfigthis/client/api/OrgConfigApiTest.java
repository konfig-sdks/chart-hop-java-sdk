/*
 * ChartHop API
 * REST API for ChartHop
 *
 * The version of the OpenAPI document: V1.0.0
 * Contact: support@charthop.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.BuiltInCategoryMap;
import com.konfigthis.client.model.BuiltInFieldConfig;
import com.konfigthis.client.model.CompensationBandsConfig;
import com.konfigthis.client.model.CreateOrgConfig;
import com.konfigthis.client.model.GrantAlias;
import com.konfigthis.client.model.OrgConfig;
import com.konfigthis.client.model.SmartCurrencyOption;
import com.konfigthis.client.model.UpdateOrgConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrgConfigApi
 */
@Disabled
public class OrgConfigApiTest {

    private static OrgConfigApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new OrgConfigApi(apiClient);
    }

    /**
     * Create an org config if it doesn&#39;t exist
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createIfNotExistsTest() throws ApiException {
        String orgId = null;
        String orgId = null;
        Set<String> hiddenFieldIds = null;
        Set<BuiltInCategoryMap> builtinCategoryMap = null;
        Set<BuiltInFieldConfig> builtinFieldConfig = null;
        CompensationBandsConfig compensationBandsConfig = null;
        List<SmartCurrencyOption> smartCurrencyOptions = null;
        String smartCurrencyDefault = null;
        Set<String> requiredJobFields = null;
        Map<String, String> scenarioApprovalChains = null;
        Boolean isOpenJobRoleApprovalEnabled = null;
        Set<GrantAlias> grantConfiguration = null;
        OrgConfig response = api.createIfNotExists(orgId, orgId)
                .hiddenFieldIds(hiddenFieldIds)
                .builtinCategoryMap(builtinCategoryMap)
                .builtinFieldConfig(builtinFieldConfig)
                .compensationBandsConfig(compensationBandsConfig)
                .smartCurrencyOptions(smartCurrencyOptions)
                .smartCurrencyDefault(smartCurrencyDefault)
                .requiredJobFields(requiredJobFields)
                .scenarioApprovalChains(scenarioApprovalChains)
                .isOpenJobRoleApprovalEnabled(isOpenJobRoleApprovalEnabled)
                .grantConfiguration(grantConfiguration)
                .execute();
        // TODO: test validations
    }

    /**
     * Return config for a given org
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByOrgIdTest() throws ApiException {
        String orgId = null;
        OrgConfig response = api.getByOrgId(orgId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an existing org config
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchExistingConfigTest() throws ApiException {
        String orgId = null;
        Set<String> hiddenFieldIds = null;
        Set<BuiltInCategoryMap> builtinCategoryMap = null;
        Set<BuiltInFieldConfig> builtinFieldConfig = null;
        CompensationBandsConfig compensationBandsConfig = null;
        List<SmartCurrencyOption> smartCurrencyOptions = null;
        String smartCurrencyDefault = null;
        Set<String> requiredJobFields = null;
        Map<String, String> scenarioApprovalChains = null;
        Boolean isOpenJobRoleApprovalEnabled = null;
        Set<GrantAlias> grantConfiguration = null;
        api.patchExistingConfig(orgId)
                .hiddenFieldIds(hiddenFieldIds)
                .builtinCategoryMap(builtinCategoryMap)
                .builtinFieldConfig(builtinFieldConfig)
                .compensationBandsConfig(compensationBandsConfig)
                .smartCurrencyOptions(smartCurrencyOptions)
                .smartCurrencyDefault(smartCurrencyDefault)
                .requiredJobFields(requiredJobFields)
                .scenarioApprovalChains(scenarioApprovalChains)
                .isOpenJobRoleApprovalEnabled(isOpenJobRoleApprovalEnabled)
                .grantConfiguration(grantConfiguration)
                .execute();
        // TODO: test validations
    }

}
