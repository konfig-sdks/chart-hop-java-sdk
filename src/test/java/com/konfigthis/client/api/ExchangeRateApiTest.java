/*
 * ChartHop API
 * REST API for ChartHop
 *
 * The version of the OpenAPI document: V1.0.0
 * Contact: support@charthop.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ExchangeRate;
import java.time.LocalDate;
import com.konfigthis.client.model.UpdateExchangeRate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExchangeRateApi
 */
@Disabled
public class ExchangeRateApiTest {

    private static ExchangeRateApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ExchangeRateApi(apiClient);
    }

    /**
     * Bulk update custom currency rates in org custom exchange rates
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bulkUpdateCustomRatesTest() throws ApiException {
        String orgId = null;
        LocalDate date = null;
        Boolean addRates = null;
        api.bulkUpdateCustomRates(orgId, date)
                .addRates(addRates)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a custom exchange rate on a particular date
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCustomRateOnDateTest() throws ApiException {
        String orgId = null;
        LocalDate date = null;
        String currencyCode = null;
        api.deleteCustomRateOnDate(orgId, date)
                .currencyCode(currencyCode)
                .execute();
        // TODO: test validations
    }

    /**
     * Return org custom exchange rates
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCustomExchangeRatesTest() throws ApiException {
        String orgId = null;
        LocalDate date = null;
        ExchangeRate response = api.getCustomExchangeRates(orgId, date)
                .execute();
        // TODO: test validations
    }

    /**
     * Return the global exchange rates based on USD for a particular date
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGlobalByDateTest() throws ApiException {
        String orgId = null;
        LocalDate date = null;
        ExchangeRate response = api.getGlobalByDate(orgId, date)
                .execute();
        // TODO: test validations
    }

    /**
     * Return the exchange rates on a particular date
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRatesOnDateTest() throws ApiException {
        String orgId = null;
        LocalDate date = null;
        ExchangeRate response = api.getRatesOnDate(orgId, date)
                .execute();
        // TODO: test validations
    }

    /**
     * Return org custom exchange rates
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void orgCustomExchangeRatesHistoryTest() throws ApiException {
        String orgId = null;
        LocalDate date = null;
        String currency = null;
        LocalDate fromDate = null;
        LocalDate toDate = null;
        List<ExchangeRate> response = api.orgCustomExchangeRatesHistory(orgId, date)
                .currency(currency)
                .fromDate(fromDate)
                .toDate(toDate)
                .execute();
        // TODO: test validations
    }

    /**
     * Update the USD-based exchange rates for a particular date. Must be the first of a month.
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateUsdExchangeRatesForDateTest() throws ApiException {
        String orgId = null;
        LocalDate date = null;
        LocalDate date = null;
        Map<String, Double> rates = null;
        api.updateUsdExchangeRatesForDate(orgId, date)
                .date(date)
                .rates(rates)
                .execute();
        // TODO: test validations
    }

}
