/*
 * ChartHop API
 * REST API for ChartHop
 *
 * The version of the OpenAPI document: V1.0.0
 * Contact: support@charthop.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.BuiltInCategoryMap;
import com.konfigthis.client.model.BuiltInFieldConfig;
import com.konfigthis.client.model.CompensationBandsConfig;
import com.konfigthis.client.model.GrantAlias;
import com.konfigthis.client.model.SmartCurrencyOption;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CreateOrgConfig
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CreateOrgConfig {
  public static final String SERIALIZED_NAME_ORG_ID = "orgId";
  @SerializedName(SERIALIZED_NAME_ORG_ID)
  private String orgId;

  public static final String SERIALIZED_NAME_HIDDEN_FIELD_IDS = "hiddenFieldIds";
  @SerializedName(SERIALIZED_NAME_HIDDEN_FIELD_IDS)
  private Set<String> hiddenFieldIds = null;

  public static final String SERIALIZED_NAME_BUILTIN_CATEGORY_MAP = "builtinCategoryMap";
  @SerializedName(SERIALIZED_NAME_BUILTIN_CATEGORY_MAP)
  private Set<BuiltInCategoryMap> builtinCategoryMap = null;

  public static final String SERIALIZED_NAME_BUILTIN_FIELD_CONFIG = "builtinFieldConfig";
  @SerializedName(SERIALIZED_NAME_BUILTIN_FIELD_CONFIG)
  private Set<BuiltInFieldConfig> builtinFieldConfig = null;

  public static final String SERIALIZED_NAME_COMPENSATION_BANDS_CONFIG = "compensationBandsConfig";
  @SerializedName(SERIALIZED_NAME_COMPENSATION_BANDS_CONFIG)
  private CompensationBandsConfig compensationBandsConfig;

  public static final String SERIALIZED_NAME_SMART_CURRENCY_OPTIONS = "smartCurrencyOptions";
  @SerializedName(SERIALIZED_NAME_SMART_CURRENCY_OPTIONS)
  private List<SmartCurrencyOption> smartCurrencyOptions = null;

  public static final String SERIALIZED_NAME_SMART_CURRENCY_DEFAULT = "smartCurrencyDefault";
  @SerializedName(SERIALIZED_NAME_SMART_CURRENCY_DEFAULT)
  private String smartCurrencyDefault;

  public static final String SERIALIZED_NAME_REQUIRED_JOB_FIELDS = "requiredJobFields";
  @SerializedName(SERIALIZED_NAME_REQUIRED_JOB_FIELDS)
  private Set<String> requiredJobFields = null;

  public static final String SERIALIZED_NAME_SCENARIO_APPROVAL_CHAINS = "scenarioApprovalChains";
  @SerializedName(SERIALIZED_NAME_SCENARIO_APPROVAL_CHAINS)
  private Map<String, String> scenarioApprovalChains = null;

  public static final String SERIALIZED_NAME_IS_OPEN_JOB_ROLE_APPROVAL_ENABLED = "isOpenJobRoleApprovalEnabled";
  @SerializedName(SERIALIZED_NAME_IS_OPEN_JOB_ROLE_APPROVAL_ENABLED)
  private Boolean isOpenJobRoleApprovalEnabled;

  public static final String SERIALIZED_NAME_GRANT_CONFIGURATION = "grantConfiguration";
  @SerializedName(SERIALIZED_NAME_GRANT_CONFIGURATION)
  private Set<GrantAlias> grantConfiguration = null;

  public CreateOrgConfig() {
  }

  public CreateOrgConfig orgId(String orgId) {
    
    
    
    
    this.orgId = orgId;
    return this;
  }

   /**
   * parent organization id
   * @return orgId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "588f7ee98f138b19220041a7", required = true, value = "parent organization id")

  public String getOrgId() {
    return orgId;
  }


  public void setOrgId(String orgId) {
    
    
    
    this.orgId = orgId;
  }


  public CreateOrgConfig hiddenFieldIds(Set<String> hiddenFieldIds) {
    
    
    
    
    this.hiddenFieldIds = hiddenFieldIds;
    return this;
  }

  public CreateOrgConfig addHiddenFieldIdsItem(String hiddenFieldIdsItem) {
    if (this.hiddenFieldIds == null) {
      this.hiddenFieldIds = new LinkedHashSet<>();
    }
    this.hiddenFieldIds.add(hiddenFieldIdsItem);
    return this;
  }

   /**
   * set of hidden field ids of an org
   * @return hiddenFieldIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "set of hidden field ids of an org")

  public Set<String> getHiddenFieldIds() {
    return hiddenFieldIds;
  }


  public void setHiddenFieldIds(Set<String> hiddenFieldIds) {
    
    
    
    this.hiddenFieldIds = hiddenFieldIds;
  }


  public CreateOrgConfig builtinCategoryMap(Set<BuiltInCategoryMap> builtinCategoryMap) {
    
    
    
    
    this.builtinCategoryMap = builtinCategoryMap;
    return this;
  }

  public CreateOrgConfig addBuiltinCategoryMapItem(BuiltInCategoryMap builtinCategoryMapItem) {
    if (this.builtinCategoryMap == null) {
      this.builtinCategoryMap = new LinkedHashSet<>();
    }
    this.builtinCategoryMap.add(builtinCategoryMapItem);
    return this;
  }

   /**
   * set of maps of the custom fields that belongs to a built-in category
   * @return builtinCategoryMap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "set of maps of the custom fields that belongs to a built-in category")

  public Set<BuiltInCategoryMap> getBuiltinCategoryMap() {
    return builtinCategoryMap;
  }


  public void setBuiltinCategoryMap(Set<BuiltInCategoryMap> builtinCategoryMap) {
    
    
    
    this.builtinCategoryMap = builtinCategoryMap;
  }


  public CreateOrgConfig builtinFieldConfig(Set<BuiltInFieldConfig> builtinFieldConfig) {
    
    
    
    
    this.builtinFieldConfig = builtinFieldConfig;
    return this;
  }

  public CreateOrgConfig addBuiltinFieldConfigItem(BuiltInFieldConfig builtinFieldConfigItem) {
    if (this.builtinFieldConfig == null) {
      this.builtinFieldConfig = new LinkedHashSet<>();
    }
    this.builtinFieldConfig.add(builtinFieldConfigItem);
    return this;
  }

   /**
   * Org configuration for built-in fields
   * @return builtinFieldConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Org configuration for built-in fields")

  public Set<BuiltInFieldConfig> getBuiltinFieldConfig() {
    return builtinFieldConfig;
  }


  public void setBuiltinFieldConfig(Set<BuiltInFieldConfig> builtinFieldConfig) {
    
    
    
    this.builtinFieldConfig = builtinFieldConfig;
  }


  public CreateOrgConfig compensationBandsConfig(CompensationBandsConfig compensationBandsConfig) {
    
    
    
    
    this.compensationBandsConfig = compensationBandsConfig;
    return this;
  }

   /**
   * Get compensationBandsConfig
   * @return compensationBandsConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompensationBandsConfig getCompensationBandsConfig() {
    return compensationBandsConfig;
  }


  public void setCompensationBandsConfig(CompensationBandsConfig compensationBandsConfig) {
    
    
    
    this.compensationBandsConfig = compensationBandsConfig;
  }


  public CreateOrgConfig smartCurrencyOptions(List<SmartCurrencyOption> smartCurrencyOptions) {
    
    
    
    
    this.smartCurrencyOptions = smartCurrencyOptions;
    return this;
  }

  public CreateOrgConfig addSmartCurrencyOptionsItem(SmartCurrencyOption smartCurrencyOptionsItem) {
    if (this.smartCurrencyOptions == null) {
      this.smartCurrencyOptions = new ArrayList<>();
    }
    this.smartCurrencyOptions.add(smartCurrencyOptionsItem);
    return this;
  }

   /**
   * Options for where to source a currency to use when currency is unknown. order specific
   * @return smartCurrencyOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "PERSON_HOME_ADDRESS_COUNTRY", value = "Options for where to source a currency to use when currency is unknown. order specific")

  public List<SmartCurrencyOption> getSmartCurrencyOptions() {
    return smartCurrencyOptions;
  }


  public void setSmartCurrencyOptions(List<SmartCurrencyOption> smartCurrencyOptions) {
    
    
    
    this.smartCurrencyOptions = smartCurrencyOptions;
  }


  public CreateOrgConfig smartCurrencyDefault(String smartCurrencyDefault) {
    
    
    
    
    this.smartCurrencyDefault = smartCurrencyDefault;
    return this;
  }

   /**
   * The default currency to use when currency is unknown and there are no options set in smartCurrencyOptions
   * @return smartCurrencyDefault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "The default currency to use when currency is unknown and there are no options set in smartCurrencyOptions")

  public String getSmartCurrencyDefault() {
    return smartCurrencyDefault;
  }


  public void setSmartCurrencyDefault(String smartCurrencyDefault) {
    
    
    
    this.smartCurrencyDefault = smartCurrencyDefault;
  }


  public CreateOrgConfig requiredJobFields(Set<String> requiredJobFields) {
    
    
    
    
    this.requiredJobFields = requiredJobFields;
    return this;
  }

  public CreateOrgConfig addRequiredJobFieldsItem(String requiredJobFieldsItem) {
    if (this.requiredJobFields == null) {
      this.requiredJobFields = new LinkedHashSet<>();
    }
    this.requiredJobFields.add(requiredJobFieldsItem);
    return this;
  }

   /**
   * Org configuration for required job fields
   * @return requiredJobFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Org configuration for required job fields")

  public Set<String> getRequiredJobFields() {
    return requiredJobFields;
  }


  public void setRequiredJobFields(Set<String> requiredJobFields) {
    
    
    
    this.requiredJobFields = requiredJobFields;
  }


  public CreateOrgConfig scenarioApprovalChains(Map<String, String> scenarioApprovalChains) {
    
    
    
    
    this.scenarioApprovalChains = scenarioApprovalChains;
    return this;
  }

  public CreateOrgConfig putScenarioApprovalChainsItem(String key, String scenarioApprovalChainsItem) {
    if (this.scenarioApprovalChains == null) {
      this.scenarioApprovalChains = new HashMap<>();
    }
    this.scenarioApprovalChains.put(key, scenarioApprovalChainsItem);
    return this;
  }

   /**
   * Configures which approval chains to use with specific scenario types
   * @return scenarioApprovalChains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Configures which approval chains to use with specific scenario types")

  public Map<String, String> getScenarioApprovalChains() {
    return scenarioApprovalChains;
  }


  public void setScenarioApprovalChains(Map<String, String> scenarioApprovalChains) {
    
    
    
    this.scenarioApprovalChains = scenarioApprovalChains;
  }


  public CreateOrgConfig isOpenJobRoleApprovalEnabled(Boolean isOpenJobRoleApprovalEnabled) {
    
    
    
    
    this.isOpenJobRoleApprovalEnabled = isOpenJobRoleApprovalEnabled;
    return this;
  }

   /**
   * Whether to show open job approval on Open Job Profile page
   * @return isOpenJobRoleApprovalEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether to show open job approval on Open Job Profile page")

  public Boolean getIsOpenJobRoleApprovalEnabled() {
    return isOpenJobRoleApprovalEnabled;
  }


  public void setIsOpenJobRoleApprovalEnabled(Boolean isOpenJobRoleApprovalEnabled) {
    
    
    
    this.isOpenJobRoleApprovalEnabled = isOpenJobRoleApprovalEnabled;
  }


  public CreateOrgConfig grantConfiguration(Set<GrantAlias> grantConfiguration) {
    
    
    
    
    this.grantConfiguration = grantConfiguration;
    return this;
  }

  public CreateOrgConfig addGrantConfigurationItem(GrantAlias grantConfigurationItem) {
    if (this.grantConfiguration == null) {
      this.grantConfiguration = new LinkedHashSet<>();
    }
    this.grantConfiguration.add(grantConfigurationItem);
    return this;
  }

   /**
   * Org Grant Configuration
   * @return grantConfiguration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Org Grant Configuration")

  public Set<GrantAlias> getGrantConfiguration() {
    return grantConfiguration;
  }


  public void setGrantConfiguration(Set<GrantAlias> grantConfiguration) {
    
    
    
    this.grantConfiguration = grantConfiguration;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CreateOrgConfig instance itself
   */
  public CreateOrgConfig putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateOrgConfig createOrgConfig = (CreateOrgConfig) o;
    return Objects.equals(this.orgId, createOrgConfig.orgId) &&
        Objects.equals(this.hiddenFieldIds, createOrgConfig.hiddenFieldIds) &&
        Objects.equals(this.builtinCategoryMap, createOrgConfig.builtinCategoryMap) &&
        Objects.equals(this.builtinFieldConfig, createOrgConfig.builtinFieldConfig) &&
        Objects.equals(this.compensationBandsConfig, createOrgConfig.compensationBandsConfig) &&
        Objects.equals(this.smartCurrencyOptions, createOrgConfig.smartCurrencyOptions) &&
        Objects.equals(this.smartCurrencyDefault, createOrgConfig.smartCurrencyDefault) &&
        Objects.equals(this.requiredJobFields, createOrgConfig.requiredJobFields) &&
        Objects.equals(this.scenarioApprovalChains, createOrgConfig.scenarioApprovalChains) &&
        Objects.equals(this.isOpenJobRoleApprovalEnabled, createOrgConfig.isOpenJobRoleApprovalEnabled) &&
        Objects.equals(this.grantConfiguration, createOrgConfig.grantConfiguration)&&
        Objects.equals(this.additionalProperties, createOrgConfig.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orgId, hiddenFieldIds, builtinCategoryMap, builtinFieldConfig, compensationBandsConfig, smartCurrencyOptions, smartCurrencyDefault, requiredJobFields, scenarioApprovalChains, isOpenJobRoleApprovalEnabled, grantConfiguration, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateOrgConfig {\n");
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    hiddenFieldIds: ").append(toIndentedString(hiddenFieldIds)).append("\n");
    sb.append("    builtinCategoryMap: ").append(toIndentedString(builtinCategoryMap)).append("\n");
    sb.append("    builtinFieldConfig: ").append(toIndentedString(builtinFieldConfig)).append("\n");
    sb.append("    compensationBandsConfig: ").append(toIndentedString(compensationBandsConfig)).append("\n");
    sb.append("    smartCurrencyOptions: ").append(toIndentedString(smartCurrencyOptions)).append("\n");
    sb.append("    smartCurrencyDefault: ").append(toIndentedString(smartCurrencyDefault)).append("\n");
    sb.append("    requiredJobFields: ").append(toIndentedString(requiredJobFields)).append("\n");
    sb.append("    scenarioApprovalChains: ").append(toIndentedString(scenarioApprovalChains)).append("\n");
    sb.append("    isOpenJobRoleApprovalEnabled: ").append(toIndentedString(isOpenJobRoleApprovalEnabled)).append("\n");
    sb.append("    grantConfiguration: ").append(toIndentedString(grantConfiguration)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("orgId");
    openapiFields.add("hiddenFieldIds");
    openapiFields.add("builtinCategoryMap");
    openapiFields.add("builtinFieldConfig");
    openapiFields.add("compensationBandsConfig");
    openapiFields.add("smartCurrencyOptions");
    openapiFields.add("smartCurrencyDefault");
    openapiFields.add("requiredJobFields");
    openapiFields.add("scenarioApprovalChains");
    openapiFields.add("isOpenJobRoleApprovalEnabled");
    openapiFields.add("grantConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("orgId");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CreateOrgConfig
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CreateOrgConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateOrgConfig is not found in the empty JSON string", CreateOrgConfig.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateOrgConfig.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("orgId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("hiddenFieldIds") != null && !jsonObj.get("hiddenFieldIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `hiddenFieldIds` to be an array in the JSON string but got `%s`", jsonObj.get("hiddenFieldIds").toString()));
      }
      if (jsonObj.get("builtinCategoryMap") != null && !jsonObj.get("builtinCategoryMap").isJsonNull()) {
        JsonArray jsonArraybuiltinCategoryMap = jsonObj.getAsJsonArray("builtinCategoryMap");
        if (jsonArraybuiltinCategoryMap != null) {
          // ensure the json data is an array
          if (!jsonObj.get("builtinCategoryMap").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `builtinCategoryMap` to be an array in the JSON string but got `%s`", jsonObj.get("builtinCategoryMap").toString()));
          }

          // validate the optional field `builtinCategoryMap` (array)
          for (int i = 0; i < jsonArraybuiltinCategoryMap.size(); i++) {
            BuiltInCategoryMap.validateJsonObject(jsonArraybuiltinCategoryMap.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("builtinFieldConfig") != null && !jsonObj.get("builtinFieldConfig").isJsonNull()) {
        JsonArray jsonArraybuiltinFieldConfig = jsonObj.getAsJsonArray("builtinFieldConfig");
        if (jsonArraybuiltinFieldConfig != null) {
          // ensure the json data is an array
          if (!jsonObj.get("builtinFieldConfig").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `builtinFieldConfig` to be an array in the JSON string but got `%s`", jsonObj.get("builtinFieldConfig").toString()));
          }

          // validate the optional field `builtinFieldConfig` (array)
          for (int i = 0; i < jsonArraybuiltinFieldConfig.size(); i++) {
            BuiltInFieldConfig.validateJsonObject(jsonArraybuiltinFieldConfig.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `compensationBandsConfig`
      if (jsonObj.get("compensationBandsConfig") != null && !jsonObj.get("compensationBandsConfig").isJsonNull()) {
        CompensationBandsConfig.validateJsonObject(jsonObj.getAsJsonObject("compensationBandsConfig"));
      }
      if (jsonObj.get("smartCurrencyOptions") != null && !jsonObj.get("smartCurrencyOptions").isJsonNull()) {
        JsonArray jsonArraysmartCurrencyOptions = jsonObj.getAsJsonArray("smartCurrencyOptions");
        if (jsonArraysmartCurrencyOptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("smartCurrencyOptions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `smartCurrencyOptions` to be an array in the JSON string but got `%s`", jsonObj.get("smartCurrencyOptions").toString()));
          }

          // validate the optional field `smartCurrencyOptions` (array)
          for (int i = 0; i < jsonArraysmartCurrencyOptions.size(); i++) {
            SmartCurrencyOption.validateJsonObject(jsonArraysmartCurrencyOptions.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("smartCurrencyDefault") != null && !jsonObj.get("smartCurrencyDefault").isJsonNull()) && !jsonObj.get("smartCurrencyDefault").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `smartCurrencyDefault` to be a primitive type in the JSON string but got `%s`", jsonObj.get("smartCurrencyDefault").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("requiredJobFields") != null && !jsonObj.get("requiredJobFields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `requiredJobFields` to be an array in the JSON string but got `%s`", jsonObj.get("requiredJobFields").toString()));
      }
      if (jsonObj.get("grantConfiguration") != null && !jsonObj.get("grantConfiguration").isJsonNull()) {
        JsonArray jsonArraygrantConfiguration = jsonObj.getAsJsonArray("grantConfiguration");
        if (jsonArraygrantConfiguration != null) {
          // ensure the json data is an array
          if (!jsonObj.get("grantConfiguration").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `grantConfiguration` to be an array in the JSON string but got `%s`", jsonObj.get("grantConfiguration").toString()));
          }

          // validate the optional field `grantConfiguration` (array)
          for (int i = 0; i < jsonArraygrantConfiguration.size(); i++) {
            GrantAlias.validateJsonObject(jsonArraygrantConfiguration.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateOrgConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateOrgConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateOrgConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateOrgConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateOrgConfig>() {
           @Override
           public void write(JsonWriter out, CreateOrgConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateOrgConfig read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CreateOrgConfig instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CreateOrgConfig given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CreateOrgConfig
  * @throws IOException if the JSON string is invalid with respect to CreateOrgConfig
  */
  public static CreateOrgConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateOrgConfig.class);
  }

 /**
  * Convert an instance of CreateOrgConfig to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

